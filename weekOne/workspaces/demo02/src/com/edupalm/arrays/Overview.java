package com.edupalm.arrays;

/**
 * 
 * 컴퓨터 데이터들을 저장한다...
 * 메모리(주기억장치)
 * - 처리할 데이터 메모리에 저장,변수
 * - 휘발성(프로그램이 종료되면 변수들이 사라진다)
 * - 수많은 값들을 처리; 저장하는 방법(구조)-다루는 방법(알고리즘)
 * Collections ( 배열, 리스트, 맵-웹, 모바일 )
 * 
 * 디스크(외부저장장치)
 * - files ( read )
 * - 백업: 처리 시에 사용할 데이터가 아님. 보관
 * 
 * loading.......( 파일 값들을 -> 메모리로 가져온다)
 * 
 * @author hsuk
 *
 */
public class Overview {
	
	/**
	 * 
	 * Create
	 * Retrieve : 가져오기
	 * Update : 선택 후 값을 변경한다.
	 * Delete : 선택 후 값을 지운다 : (배열 정적:길이 변하지 않는다.)
	 * 
	 * @param args
	 */
	public static void main(String[] args) {
		// 기능적인 예시 : 추가, 변경, 삭제, 검색(탐색)
		// - 여러 개의 데이터가 있다... 관리한다...
		
	}
	
	/**
	 * 배열 - 자료형이 같은 변수들을 모아놓은 자료구조
	 * - 요소 : 배열 내에 있는 각변수들
	 * - 요소번호 : int [0]~[길이-1] : 범위가 제한되어 있다.
	 * - 배열길이 : 최대 개수 - 배열에 저장할 수 있는 변수의 최대 개수
	 * 		고정길이: 추가할 때 최대 개수를 넘을 수 없다.(가변길이)
	 * 		(정적구조)-(동적구조)
	 * 
	 * !!!!!! 요소번호로 제어할 수 있어야 한다. : 의미를 정하고 생각하세요
	 * 
	 * @param args
	 */

	public static void main01(String[] args) {
		// 1. 배열 선언(생성) : 자료형[] 이름;(배열명, 변수명-참조)
		int[] ar;// 배열명 ar : 변수를 선언
		// 2. 메모리에 실제 배열 공간 생성한다.
		ar = new int[5]; // 정적구조: 반드시 길이를 준다.
		// 3. 처리 : 요소단위로 반복하면서 하나씩 처리한다.
		//	길이 5인 1차 배열 생성; [0][1][2][3][4]
		for(int i=0; i<ar.length;i+=1) {
			// 0 배열명.length : 모든 요소들을 처리한다.
			// 요소명 : 배열명[번호] <- int 변수 == 변수명
			ar[i] = (i*5+1);

		}

		
	}

}
